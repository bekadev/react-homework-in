[{"/Users/bekzatkyzyrbaev/Desktop/IT-INCUBATOR/react-homework-in/src/index.tsx":"1","/Users/bekzatkyzyrbaev/Desktop/IT-INCUBATOR/react-homework-in/src/reportWebVitals.ts":"2","/Users/bekzatkyzyrbaev/Desktop/IT-INCUBATOR/react-homework-in/src/s1-main/App.tsx":"3","/Users/bekzatkyzyrbaev/Desktop/IT-INCUBATOR/react-homework-in/src/s2-homeworks/hw10/bll/store.ts":"4","/Users/bekzatkyzyrbaev/Desktop/IT-INCUBATOR/react-homework-in/src/s2-homeworks/hw01/HW1.tsx":"5","/Users/bekzatkyzyrbaev/Desktop/IT-INCUBATOR/react-homework-in/src/s2-homeworks/hw10/bll/loadingReducer.ts":"6","/Users/bekzatkyzyrbaev/Desktop/IT-INCUBATOR/react-homework-in/src/s2-homeworks/hw12/bll/themeReducer.ts":"7","/Users/bekzatkyzyrbaev/Desktop/IT-INCUBATOR/react-homework-in/src/s2-homeworks/hw01/friend-message/FriendMessage.tsx":"8","/Users/bekzatkyzyrbaev/Desktop/IT-INCUBATOR/react-homework-in/src/s2-homeworks/hw01/message/Message.tsx":"9","/Users/bekzatkyzyrbaev/Desktop/IT-INCUBATOR/react-homework-in/src/s2-homeworks/hw01/message-sender/MessageSender.tsx":"10","/Users/bekzatkyzyrbaev/Desktop/IT-INCUBATOR/react-homework-in/src/s2-homeworks/hw02/HW2.tsx":"11","/Users/bekzatkyzyrbaev/Desktop/IT-INCUBATOR/react-homework-in/src/s2-homeworks/hw02/affairs/Affairs.tsx":"12","/Users/bekzatkyzyrbaev/Desktop/IT-INCUBATOR/react-homework-in/src/s2-homeworks/hw02/affairs/affair/Affair.tsx":"13","/Users/bekzatkyzyrbaev/Desktop/IT-INCUBATOR/react-homework-in/src/s2-homeworks/hw03/HW3.tsx":"14","/Users/bekzatkyzyrbaev/Desktop/IT-INCUBATOR/react-homework-in/src/s2-homeworks/hw03/GreetingContainer.tsx":"15","/Users/bekzatkyzyrbaev/Desktop/IT-INCUBATOR/react-homework-in/src/s2-homeworks/hw03/Greeting.tsx":"16"},{"size":730,"mtime":1676973834805,"results":"17","hashOfConfig":"18"},{"size":504,"mtime":1676973834805,"results":"19","hashOfConfig":"18"},{"size":665,"mtime":1677001039693,"results":"20","hashOfConfig":"18"},{"size":541,"mtime":1676973834815,"results":"21","hashOfConfig":"18"},{"size":2289,"mtime":1676994842015,"results":"22","hashOfConfig":"18"},{"size":458,"mtime":1676973834815,"results":"23","hashOfConfig":"18"},{"size":320,"mtime":1676973834816,"results":"24","hashOfConfig":"18"},{"size":1836,"mtime":1676995035351,"results":"25","hashOfConfig":"18"},{"size":1237,"mtime":1676982647148,"results":"26","hashOfConfig":"18"},{"size":2307,"mtime":1676973834806,"results":"27","hashOfConfig":"18"},{"size":2952,"mtime":1676997845023,"results":"28","hashOfConfig":"18"},{"size":2520,"mtime":1676998227706,"results":"29","hashOfConfig":"18"},{"size":1511,"mtime":1676998397256,"results":"30","hashOfConfig":"18"},{"size":2348,"mtime":1677837529000,"results":"31","hashOfConfig":"18"},{"size":2621,"mtime":1677839311827,"results":"32","hashOfConfig":"18"},{"size":2310,"mtime":1677839208917,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"1gq96vw",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"37"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bekzatkyzyrbaev/Desktop/IT-INCUBATOR/react-homework-in/src/index.tsx",[],[],[],"/Users/bekzatkyzyrbaev/Desktop/IT-INCUBATOR/react-homework-in/src/reportWebVitals.ts",[],[],"/Users/bekzatkyzyrbaev/Desktop/IT-INCUBATOR/react-homework-in/src/s1-main/App.tsx",[],[],"/Users/bekzatkyzyrbaev/Desktop/IT-INCUBATOR/react-homework-in/src/s2-homeworks/hw10/bll/store.ts",[],[],"/Users/bekzatkyzyrbaev/Desktop/IT-INCUBATOR/react-homework-in/src/s2-homeworks/hw01/HW1.tsx",["86"],[],"import React from 'react'\nimport Message from './message/Message'\nimport MessageSender from './message-sender/MessageSender'\nimport s2 from '../../s1-main/App.module.css'\nimport FriendMessage from './friend-message/FriendMessage'\nimport avatar from './avatar.png'\n\n/*\n* 1 - описать тип MessageType\n* 2 - описать тип MessagePropsType в файле Message.tsx\n* 3 - в файле Message.tsx отобразить приходящие данные\n* 4 - выполнить пункты 2, 3 в файле FriendMessage.tsx\n* 5 - сделать стили в соответствии с дизайном\n* */\n\n\n\n// нужно создать правильный тип вместо any\nexport type MessageType = {\n    id: number\n    user: Users\n    message: Message\n}\ninterface Users {\n    avatar: string\n    name: string,\n}\n\ninterface Message {\n    text: string\n    time: string\n}\n\n// структуру объекта не менять\nexport const message0: MessageType = {\n    id: 0,\n    user: {\n        avatar: avatar, // можно менять\n        name: 'Some Name',  // можно менять\n    },\n    message: {\n        text: 'some textsome textsome textsome textsome textsome textsome text', // можно менять\n        time: '22:00', // можно менять\n    },\n}\nexport const friendMessage0: MessageType = {\n    id: 100,\n    user: {\n        avatar: avatar, // можно менять\n        name: 'Friend Name', // можно менять\n    },\n    message: {\n        text: 'зеркальное сообщение для тренировки css', // можно менять\n        time: '22:00', // можно менять\n    },\n}\n\nconst HW1 = () => {\n    return (\n        <div id={'hw1'}>\n            <div className={s2.hwTitle}>Homework #1</div>\n            <div className={s2.hw}>\n                {/*проверка отображения (не менять)*/}\n                <div>\n                    <Message message={message0} />\n                    <FriendMessage message={friendMessage0} />\n                </div>\n\n                {/*для автоматической проверки дз (не менять)*/}\n                <MessageSender M={Message} />\n            </div>\n        </div>\n    )\n}\n\nexport default HW1\n","/Users/bekzatkyzyrbaev/Desktop/IT-INCUBATOR/react-homework-in/src/s2-homeworks/hw10/bll/loadingReducer.ts",[],[],"/Users/bekzatkyzyrbaev/Desktop/IT-INCUBATOR/react-homework-in/src/s2-homeworks/hw12/bll/themeReducer.ts",[],[],"/Users/bekzatkyzyrbaev/Desktop/IT-INCUBATOR/react-homework-in/src/s2-homeworks/hw01/friend-message/FriendMessage.tsx",["87"],[],"import React from 'react'\nimport s from './FriendMessage.module.css'\nimport {MessageType} from \"../HW1\";\n\n// создать тип вместо any и отобразить приходящие данные\n\nexport type  FriendMessagePropsType = {\n    message: MessageType\n}\nconst FriendMessage = (props: FriendMessagePropsType) => {\n    return (\n        <div\n            id={'hw1-friend-message-' + props.message.id}\n            className={s.friendMessage}\n        >\n            <div className={s.friendImageAndText}>\n\n                <div className={s.friendText}>\n                    <div\n                        id={'hw1-friend-name-' + props.message.id}\n                        className={s.friendName}\n                    >\n                        {/*создаёт студент*/}\n                        {props.message.user.name}\n                        {/**/}\n                    </div>\n                    <pre\n                        id={'hw1-friend-text-' + props.message.id}\n                        className={s.friendMessageText}\n                    >\n                        {/*создаёт студент*/}\n                        {props.message.message.text}\n                        {/**/}\n                    </pre>\n                </div>\n                <img\n                    id={'hw1-friend-avatar-' + props.message.id}\n                    // создаёт студент\n                    src={props.message.user.avatar}\n                    //\n                />\n            </div>\n            <div\n                id={'hw1-friend-time-' + props.message.id}\n                className={s.friendTime}\n            >\n                {/*создаёт студент*/}\n                {props.message.message.time}\n                {/**/}\n            </div>\n        </div>\n    )\n}\n\nexport default FriendMessage\n","/Users/bekzatkyzyrbaev/Desktop/IT-INCUBATOR/react-homework-in/src/s2-homeworks/hw01/message/Message.tsx",["88","89"],[],"import React from 'react'\nimport s from './Message.module.css'\nimport {message0, MessageType} from \"../HW1\";\n\n// нужно создать правильный тип вместо any\nexport type MessagePropsType = {\n    message: MessageType\n}\n\n// нужно отобразить приходящие данные\nconst Message = (props: MessagePropsType) => {\n    return (\n        <div id={'hw1-message-' + props.message.id} className={s.message}>\n            <div className={s.imageAndText}>\n                <img\n                    id={'hw1-avatar-' + props.message.id}\n                    src={props.message.user.avatar}\n                />\n                <div className={s.text}>\n                    <div id={'hw1-name-' + props.message.id} className={s.name}>\n                        {props.message.user.name}\n                    </div>\n                    <pre id={'hw1-text-' + props.message.id} className={s.messageText}>\n                        {props.message.message.text}\n                    </pre>\n                </div>\n            </div>\n            <div id={'hw1-time-' + props.message.id} className={s.time}>\n                {props.message.message.time}\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","/Users/bekzatkyzyrbaev/Desktop/IT-INCUBATOR/react-homework-in/src/s2-homeworks/hw01/message-sender/MessageSender.tsx",[],[],"/Users/bekzatkyzyrbaev/Desktop/IT-INCUBATOR/react-homework-in/src/s2-homeworks/hw02/HW2.tsx",[],[],"/Users/bekzatkyzyrbaev/Desktop/IT-INCUBATOR/react-homework-in/src/s2-homeworks/hw02/affairs/Affairs.tsx",[],[],"/Users/bekzatkyzyrbaev/Desktop/IT-INCUBATOR/react-homework-in/src/s2-homeworks/hw02/affairs/affair/Affair.tsx",[],[],"/Users/bekzatkyzyrbaev/Desktop/IT-INCUBATOR/react-homework-in/src/s2-homeworks/hw03/HW3.tsx",[],[],"/Users/bekzatkyzyrbaev/Desktop/IT-INCUBATOR/react-homework-in/src/s2-homeworks/hw03/GreetingContainer.tsx",[],[],"/Users/bekzatkyzyrbaev/Desktop/IT-INCUBATOR/react-homework-in/src/s2-homeworks/hw03/Greeting.tsx",[],[],{"ruleId":"90","severity":1,"message":"91","line":29,"column":11,"nodeType":"92","messageId":"93","endLine":29,"endColumn":18},{"ruleId":"94","severity":1,"message":"95","line":36,"column":17,"nodeType":"96","endLine":41,"endColumn":19},{"ruleId":"97","severity":1,"message":"98","line":3,"column":9,"nodeType":"92","messageId":"99","endLine":3,"endColumn":17},{"ruleId":"94","severity":1,"message":"95","line":15,"column":17,"nodeType":"96","endLine":18,"endColumn":19},"@typescript-eslint/no-redeclare","'Message' is already defined.","Identifier","redeclared","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'message0' is defined but never used.","unusedVar"]